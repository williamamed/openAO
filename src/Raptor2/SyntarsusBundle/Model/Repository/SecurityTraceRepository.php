<?php

namespace Raptor2\SyntarsusBundle\Model\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SecurityTraceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SecurityTraceRepository extends EntityRepository
{
    public function getListTraceSearch($start, $cant,$list) {
        $data=array();
        if($list->post('username'))
            $data['username']="i.username LIKE :username";
        if($list->post('ip'))
            $data['ip']='i.ip LIKE :ip';
        if($list->post('log'))
            $data['log']='i.log LIKE :log';
        
        if($list->post('from_date') and $list->post('to_date')){
            $data['from_date']="i.aDate between :from_date ";
            $data['to_date']=":to_date";
        }
        $string=  join(' and ', $data);
        if(count($data)>0)
            $string=' where '.$string;
        
        $query = $this->getEntityManager()->createQuery("SELECT i FROM Raptor2\SyntarsusBundle\Model\Entity\SecurityTrace i $string ORDER BY i.aDate DESC");
        foreach ($data as $key => $value) {
            if($key=='log')
                $query->setParameter($key,'%'.$list->post($key).'%');
            else
                $query->setParameter($key,$list->post($key));
        }
          
        $query->setMaxResults($cant);
        $query->setFirstResult($start);
        
        $query2 = $this->getEntityManager()->createQuery("SELECT COUNT(i.id) FROM Raptor2\SyntarsusBundle\Model\Entity\SecurityTrace i $string");
        foreach ($data as $key => $value) {
            if($key=='log')
                $query2->setParameter($key,'%'.$list->post($key).'%');
            else
                $query2->setParameter($key,$list->post($key));
        }  
        
        return array('count'=>$query2->getSingleScalarResult(),'result'=>$query->getResult());
    }
    
    public function getEstadistic() {
        
        $query = $this->getEntityManager()->createQuery(
                "SELECT count(i.id) as cant , i.state as name FROM Raptor2\SyntarsusBundle\Model\Entity\SecurityTrace i group by i.state");
       
        return $query->getResult();
    }
    
    public function getEstadisticTotal() {
        
        $query = $this->getEntityManager()->createQuery(
                "SELECT count(i.id) as cant FROM Raptor2\SyntarsusBundle\Model\Entity\SecurityTrace i");
       
        return $query->getSingleScalarResult();
    }
}