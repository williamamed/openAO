<!DOCTYPE html>
<html >
    <head>
        <meta charset="UTF-8">
        <script type="text/javascript">
            /**
             * This is the Raptor Client Core Library
             */

            BaseRaptor = function() {
                window.localStorage.setItem('rapLib', "{{ token }}");
                
            }
            BaseRaptor.prototype = {
                constructor: BaseRaptor,
                getToken: function() {
                    return window.localStorage.getItem('rapLib');
                },
                getFront: function() {
                    return "{{ front }}";
                },
                getRoute: function(route) {
                    return "{{ front }}"+route;
                },
                getBundleResource: function(resource) {
                    return "{{ bundle }}/" + resource;
                },
                getTag: function(name) {
                    var lang = {{ file|raw}};
                            return lang[name];
                },
                getLanguage: function() {
                    return "{{ lang }}";
                },
                getUser:function(){
                    return "{{ user }}";
                },
                {{ plugin('core_library_inside')|raw }}
            }
            "use strict";!function(e,n){"function"==typeof define&&define.amd?define([],n):e.hermes=n()}(window,function(){function e(e,n){e in r||(r[e]=[]),r[e].push(n)}function n(e,n){if(e in r){if("function"==typeof n){var t=r[e].indexOf(n);r[e].splice(t,1)}"function"==typeof n&&0!==r[e].length||delete r[e]}}function t(e,n){e in r&&r[e].forEach(function(e){return e(n)})}var r={};return"BroadcastChannel"in window?function(){function r(e,n){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];o.postMessage({name:e,data:n}),r&&t(e,n)}var o=new BroadcastChannel("hermes");return o.onmessage=function(e){return t(e.data.name,e.data.data)},{on:e,off:n,send:r}}():"SharedWorker"in window?function(){function r(e,n){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];s.port.postMessage({name:e,data:n}),r&&t(e,n)}var o=document.querySelector('[src$="hermes.js"],[src$="hermes.min.js"]'),a=new URL(o.src),i=a.pathname.replace(/hermes(\.min)?\.js/,"hermes-worker$1.js"),s=new SharedWorker(i,"hermes");return s.port.start(),s.port.onmessage=function(e){return t(e.data.name,e.data.data)},{on:e,off:n,send:r}}():"localStorage"in window?function(){function r(e,n){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=a+e;null===o.getItem(s)?(o.setItem(s,JSON.stringify(n)),o.removeItem(s),r&&t(e,n)):(!s in i&&(i[s]=[]),i[s].push(n))}var o=window.localStorage,a="__hermes:",i={};return window.addEventListener("storage",function(e){if(e.key.startsWith(a)&&null===e.oldValue){t(e.key.replace(a,""),JSON.parse(e.newValue))}}),window.addEventListener("storage",function(e){if(e.key.startsWith(a)&&null===e.newValue){var n=e.key.replace(a,"");n in i&&(r(n,i[n].shift()),0===i[n].length&&delete i[n])}}),{on:e,off:n,send:r}}():function(){function e(){console.warn("Hermes messaging is not supported.")}return{on:e,off:e,send:e}}()});
            Raptor = new BaseRaptor();
            {{ plugin('core_library_outside')|raw }}
            </script>
            {{ plugin('core_header')|raw }}